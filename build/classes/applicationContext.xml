<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- 自动装载 -->
	<context:component-scan base-package="com.snacks" />
	<!-- 配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:system.properties</value>
			</list>
		</property>
	</bean>
	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName">
			<value>${driverClassName}</value>
		</property>
		<property name="url">
			<value>${url}</value>
		</property>
		<property name="username">
			<value>${username}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
		<!-- 配置监控统计拦截的filters -->
		<property name="filters">
			<value>${filters}</value>
		</property>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait">
			<value>${maxWait}</value>
		</property>
		<!-- 配置初始化大小、最小、最大 -->
		<property name="maxActive">
			<value>${maxActive}</value>
		</property>
		<property name="initialSize">
			<value>${initialSize}</value>
		</property>
		<property name="minIdle">
			<value>${minIdle}</value>
		</property>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis">
			<value>${timeBetweenEvictionRunsMillis}</value>
		</property>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis">
			<value>${minEvictableIdleTimeMillis}</value>
		</property>
		<property name="validationQuery">
			<value>${validationQuery}</value>
		</property>
		<property name="testWhileIdle">
			<value>${testWhileIdle}</value>
		</property>
		<property name="testOnBorrow">
			<value>${testOnBorrow}</value>
		</property>
		<property name="testOnReturn">
			<value>${testOnReturn}</value>
		</property>
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements">
			<value>${poolPreparedStatements}</value>
		</property>
		<property name="maxPoolPreparedStatementPerConnectionSize">
			<value>${maxPoolPreparedStatementPerConnectionSize}</value>
		</property>
		
	</bean>
	<!-- mybatis -->
	<bean id="ibatisSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:Mybatis.xml" />
		<!-- mapper和resultmap配置路径 -->
        <property name="mapperLocations">
            <list>
                <!-- 以-resultmap.xml结尾所有文件 -->
                <value>classpath:**/*-resultmap.xml</value>
                <value>classpath:**/*-mapper.xml</value>
            </list>
        </property>
	</bean>
	<!-- 事物 开始 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
    <!--事务的传播 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="select*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="pt"
			expression="execution(* com.snacks.*.service.impl.*.*(..)) " />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pt" />
	</aop:config>
	<!-- 事物 结束 -->
	<!-- 自动注册Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.snacks.*.dao" />
	</bean>


</beans>